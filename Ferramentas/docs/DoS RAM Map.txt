
=== 02000000 - 020C073F: Most of ARM9

020070FC - Has pointers to 0207708C and 020788F4 (map tile metadata for castle & abyss).
020251B8 - Has pointers to 02076AAC and 02078810 (map line data for castle & abyss).
020250C4 - Has pointers to 02076408 and 0207880C (secret doors for castle & abyss).

02060234,4 - Hardcodes 02308920, the start of asset memory.
02060280 - Hardcodes 023C0000, the end of asset memory, as an ARM shifted immediate.

02076408-0207641D - List of secret door positions on the map for the castle.
02076AAC - Map line data for the castle.
0207708C - Map tile metadata for the castle.
0207880C - List of secret door positions on the map for the abyss. List is empty, it ends instantly.
02078810 - Map line data for the abyss.
020788F4 - Map tile metadata for the abyss.

02078CAC-02079D43 - Enemy DNA list.

02079D44-02079D5B - List of secret rooms (rooms that shouldn't show up on the map even if you have a map item for that sector).
  Entry length 2.
  00,1: Sector index of this secret room.
  01,1: Room index of this secret room.
  The end of the list is marked by FF FF.

02079D5C-02079D7B - The palette for the map.
  This is not a palette list, just a single palette without the usual palette header.

02079D7C-02079E53 - List of layer scroll modes.
  Each is 0xC bytes long.
  00,4: Horizontal scrolling multiplier (0x1000 = 1.0).
  04,4: Vertical scrolling multiplier (0x1000 = 1.0).
  08,4: Autoscrolling type.
    0 - No autoscrolling.
    1 - Autoscrolling.
      Word 00 is the speed of horizontal scrolling.
      Word 04 is the speed of vertical scrolling.

0207ABEC-0207ABFB - Layer metadata for the background of the bestiary.
0207ABFC-0207AD7B - Layer tile list for the background of the bestiary.
  Menu backgrounds are handled very similarly to room layers.

0207B63C - Layer data for the pause menu.
02083EB0 - Tileset for the pause menu.
  Entry length 4.
  Format:
  00,4: Bitfield.
    & 00000007: X pos in terms of 16x16 tiles on the GFX page.
    & 00000078: Y pos in terms of 16x16 tiles on the GFX page.
    & 00000F80: Unused.
    & 0000F000: GFX page index.
    & 0F000000: BG palette index.
    & F0000000: Unused.
02079E70 - GFX list for the pause menu.
  022D9E4C,022D9E58,022D9E64 - GFX wrappers for the pause menu. (/bc/f_main0.dat, /bc/f_main1.dat, /bc/f_main2.dat)
022DA3D4 - Palette list for the pause menu.

02086394-0208A393 - List of sine and cosine values.
  Entry length 4.
  There are 0x1000 entries in this list, with the index corresponding to an input value of 0 to 359 degrees.
  00,2: Sine of the input value.
  02,2: Cosine of the input value.
  The sine/cosine values range from -0x1000 to 0x1000, corresponding to -1.0 to 1.0.

0208AC68,4 - Has a pointer to where /font/LD_font_u8.DAT is loaded in RAM.

0208ACC0 - List of update code pointers for each game state (020C07E8).

0208AD8C - List of room pointers for transition rooms.
  00000000 marks the end of the list.

0208CA90 - List of files to load for enemies.

0208CC6C-0209A0C3 - List of assets.
  Entry length 0x28.
  Asset indexes are indexes in this list.
  00,4: Asset pointer.
  04,2: Type of asset.
    0001 - GFX.
    0004 - Sprite.
    0100 - 3D model.
    1000 - Font.
  06,1A: Filename. The end is padded with null bytes.

0209A0E8 - List of elemental damage effects to appear when the player damages an enemy with that element?
  Entry length 0xC.
  04,4: 
  08,4: 

0209A4C4-0209A507 - List of pointers to each sector's list of assets.
Each list of assets has this format:
  Entry length 8.
  00,4: Asset index of the asset.
  04,4: 2?
  The list is terminated by FFFFFFFF.

0209A154,2 - The color to use for the blood particle effect when the player or an enemy made of flesh is damaged.

0209A188-0209A19F - List of the x and y positions (in map tiles) of each the icon of each warp room on the map.
  This list is only for the position of the square icon on top of each warp room when you're using a warp point.
  The list of warp rooms (0222C478) has the locations of the warp rooms themselves, not just the icon.
  00,1: The warp room's x pos on the map.
  01,1: The warp room's y pos on the map.
  These warp rooms are in the same order as list 020F71A8 (bitfield of what warp rooms you've visited).

0209A554-0209A563 - List of room indexes in the Demon Guest House sector for each room in the slide puzzle.
  The first entry is for the blank room, entries 01-0F are for rooms 1-15.

0209A630 - List of songs that play in each sector.
  Entry length 4.
  the list starts 4 bytes later, the first entry is blank.
  If the sector index is 5 (Condemned Tower & Mine of Judgement) and the room's y pos on the map (020F6E22) is greater than 0x16, then use the 0x10th entry in this list instead of the 0x5th.
  Entries in this list that say 0 will not result in the song being changed.
0209E928 - List of songs for sound test.
  Entry length 8.
  Bytes 1-4: Song number.
  Bytes 5-8: Text index for the song name.

0209E378 - List of GFX files and palette lists for images of enemies in the bestiary.
  Entry length 8.
  00,4: GFX pointer. (Not actually read.)
  04,4: Palette list pointer.
  Each palette list has 4 palettes, one for each enemy in the image.
  The images are named like /sc/f_rire00.dat (where 00 is a two-digit decimal number), are 1-dimensional, and have 4 enemies in each image.

0209A688 - List of face portrait files. Format:
  Each is 20 bytes long.
  Bytes 1-4: GFX pointer.
  Bytes 5-8: Palette pointer.
  Bytes 9-16: Gfx filename (e.g. "soma0".)
    To get the full filepath, prepend /sc/f_f to the front of each string, and append .dat to the end.
  Bytes 17-20: Asset index of the gfx file.
There are 41 entries in the list total.

0209A7D0 - some kind of lists of multiple graphic file names? like /sc/f_f%s.dat along with domi0 domi1 domi2 and domi3 (dmitrii's gfx files)

0209A9CC-0209A9E3 - List of asset pointers to the 6 common GFX files.

0209B88C-0209BA67 - List of files to load for special objects.

0209BA68-0209BE87 - Consumable item data.
0209BE88-0209C34B - Armor item data.
0209C34C-0209CBEF - Weapon item data.

0209CCBC - List of pointers to weapon synthesis chains.
  Each chain is composed of synths. Each synth is 4 bytes long:
    00,1: Global ID+1 of the weapon required for synthesis.
    01,1: Local ID of the soul required for synthesis.
    02,1: Global ID+1 of the weapon to synthesize.
    03,1: 00
    00000000 indicates the end of this chain of weapon synths.

0209D004 - List of OAM data for the weapon synthesis menu foreground?
  Entry length 0x10.
  Unknown format.

0209D124 - List of extra soul data.
  Entry length 2.
  Byte 1: Maximum you can have when you have 1 of this soul.
  Byte 2: Additional number you can have for every additional soul scaling level you get after the first.

0209D190-0209DF03 - Soul data.

0209DF4C-0209DF61 - List of 0x16 items for sale in the shop from the beginning.
0209DF38-0209DF49 - List of 0x12 items for sale in the shop after getting event flag 0x40 (meeting Dario and Dmitrii in Wizardry Lab).
0209DF14-0209DF1D - List of 0x0A items for sale in the shop after getting event flag 0x200 (Arikado giving Soma Mina's Talisman).
  Each item is a byte. It's the global ID+1 of the item.
  Here's where in the code the number of items in each pool and the required event flags are defined:
  020370F4 - Hardcoded number of items in shop pool 1 (0x16).
  0203711C - Hardcoded number of items in shop pool 2 (0x12).
  02037144 - Hardcoded number of items in shop pool 3 (0x0A).
  0203710C - Hardcoded required event flag for shop pool 2 (0x40).
  02037134 - Hardcoded required event flag for shop pool 3 (0x200).

0209ED10 - currently playing song?

=== 020C073F: End of most of ARM9.

020C0740,4 - This is 1 if AoS is currently in the GBA slot.

020C07E0 - Start of game object.

020C07E0,4 - Number of frames that have passed since the game was booted up (or reset).
  This is used to affect the initial RNG seed when loading a save file.
020C07E4,4 - Current RNG seed.
  The most recent random number generated is stored here.
  It is used to affect the next random number generated.

020C07E8 - Game state.
  This is an index in list 0208ACC0.
  00 Loading a save
  01 Loading a save / ingame init?
  02 Ingame
  03 
  04 Title screen
  09 Game start menu
  0A Paused
  13 Intro movie
  14 Booting up (both for the first time, and after soft resetting)
  15 Intro logos
  09 02 05 loads file immediately
020C07E9-020C07EA - Substate.

020C1FF8 - Bitfield of which blocks in the room currently have Balore blocks on them.

020C6260 - List of sprite info for currently loaded entities.
  The halfword at +68 in an entity's memory is the index in this list.
  Each entry is 0x10 bytes long.
  00,2: 
  02,2: 
  08,4: Affects GFX. Index in the list of currently loaded GFX files?
  0C,4: Sprite pointer.

020C7460-020C76DF - List of currently loaded GFX assets.
  Entry length 0x14.
  0x20 entries in totals.
  The index in this list is argument r1 to func LoadGFX
  00,2: Index of the previous entry in this list...?
  02,2: Index of the next entry in this list...?
  04,4: Index in this same list of the first entry for this asset.
    Assets can take up multiple slots in a row, so if an asset is using slots 0x11-0x14, all 4 of those will have 0x11 for this value.
    If this value is 0xFFFFFFFF this slot is empty.
  08,2: 
  0A,1: The GFX load type.
    0 - Single GFX page.
    1 - Multiple GFX pages that are all loaded simultaneously.
    2 - Multiple GFX pages, but only one is loaded at once, like for player characters.
  0B,1: 
  0C,1: 
  0D,1: Might be the total number of slots in this list used for this particular asset.
    This value is only set for the first entry of each asset.
  0E,2: Bitfield of flags.
    & 01 - 
    & 02 - Might mean the GFX shouldn't be automatically unloaded when no entities are using it?
    & 04 - 
    & 08 - 
  10,4: GFX asset pointer.

020C75C4 - pointer to list of gfx files for entities in this room? e.g. /sc/t_fm68_0.dat for merman
020C75F4 - changes for each room. can be 10, 13, 14, FFFFFFFF
020C7729

020C7EA4-020C82A3 - List of sprites in the bottom screen OAM.
020C86A4-020C8AA3 - List of sprites in the top screen OAM.
  Entry length 0x10.

020C3940 - Tile mapping for BG1 layer.
  Used for the background of menus.

020CA368,2 - Next globally unique ID for an entity.
  This is incremented every time an entity is created so that entities have a uniquely identifier number, even across different rooms.
  This starts at 1 when resetting the game.
  When FFFF is exceeded, it loops back around to 1. (0 is skipped.)

020CA388,2 - Bitfield of buttons the player is currently pressing.
  0001 - A
  0002 - B
  0004 - Select
  0008 - Start
  0010 - Right
  0020 - Left
  0040 - Up
  0080 - Down
  0100 - R
  0200 - L
  0400 - X
  0800 - Y
  2000 - Debug
  These can also be set programmatically by events or enemies to make Soma act a certain way when controls are disabled.
020CA38C,2 - Bitfield of buttons the player just pressed this frame.

020CA398 - normally 0, if 1 then soma can't move. but the game puts it back to 0 if you try to make it 1, so you need a cheat to stop soma from moving (or vice versa).

020CA39C,2 - Bitfield of what buttons the player is pressing.
020CA3A0,2 - Bitfield of what buttons the player just pressed this frame.
    Unlike 020CA388 and 020CA38C, these are sometimes 0 even when the player is pressing buttons. TODO

=== 020CA3F0 - 020F6DEF: Entities currently loaded into memory. Each is 2A0 bytes long. They range from 0-10F.

What each range of entity slots is for:
002-002  020CA930-020CABCF  Player.
003-003  020CABD0-020CAE6F  Player yellow soul.
004-004  020CAE70-020CB10F  ?
005-01B  020CB110-020CED6F  Player blue souls.
01C-028  020CED70-020D0F8F  Player red souls.
029-02C  020D0F90-020D1A0F  Player weapons.
02D-02D  020D1A10-020D1CAF  ?
030-080  020D21F0-020DF68F  Room entities, including enemies and special objects.
081-0EF  020DF690-020F19EF  Various things including particles and enemy projectiles.
0F0-0F1  020F19F0-020F1F2F  Menu entities?
0F2-0F2  020F1F30-020F21CF  ?
10E-10E  020F68B0-020F6B4F  ?
10F-10F  020F6B50-020F6DEF  ? Handles scrolling the screen and swapping out which GFX pages are loaded for the player?

020CA930 - Start of the player entity.
020CA95C,4 - Player's current X pos.
020CA960,4 - Player's current Y pos.
020CA968,4 - Player's current X velocity.
020CA96C,4 - Player's current Y velocity.
020CA980 - Scale multiplier for the player's trail. 1000 means 1x.
020CA984 - Scale multiplier for the player. Only does anything if 020CA984 is nonzero.
020CA988 - Enable player scaling.
020CA9DC - Bitfield of damage types.
  Bit 00040000 should be on for the player to take damage.
020CAA00 - Bitfield of player state booleans.
  0x00000001 - Moving.
  0x00000002 - Moving forward
  0x00000004 - Facing left.
  0x00000008 - In air.
  0x00000010 - Double jumping.
  0x00000020 - Hippogryph jumping.
  0x00000040 - Bouncing after a jumpkick.
  0x00000080 - Crouching.
  0x00000100 - 
  0x00000200 - Standing on jump-through platform.
  0x00000400 - 
  0x00000800 - Taking damage in the air.
  0x00001000 - 
  0x00002000 - Jumpkicking.
  0x00004000 - Swinging melee weapon.
  0x00008000 - Super attacking.
  0x00010000 - 
  0x00020000 - Using R-button soul.
  0x00040000 - 
  0x00080000 - 
  0x00100000 - Jumpkicking.
  0x00200000 - Taking damage.
  0x00400000 - 
  0x00800000 - 
  0x01000000 - 
  0x02000000 - 
  0x04000000 - 
  0x08000000 - 
  0x10000000 - 
  0x20000000 - 
  0x40000000 - 
  0x80000000 - 
020CAA2A,1 - Numbers of jumps the player has left.
020CAA6E - keeps track of the id of the bullet soul soma just threw. (maybe only during dmitrii fight?)
020CAA74 - current playable character. not sure how this is different from 020F740E.

020D2C7D - event counter for the event with hammer at the start of dracula's castle.
020D2DA0 - during dmitrii fight, the red soul dmitrii currently has equipped.
020D36A0 - flying armor state? 07 means he died. 87 is still alive.
020D36A8 - flying armor's hp.
020D29D0 - dmitrii's memory position. (possibly)
  dmitrii keeps a list of the last 8 or souls that hit him. if you hit him with one of those again he won't take it again. but if you hit him with more than 8 souls he loses track of the first ones, and you can hit him with those again and he'll take it. this list starts at 020D2ABC. 020D2B00 has the integer of which soul in this list dmitrii should use, which increases whenever he gets a new soul, and resets to 0 when he loses track of the first soul. also, after the id of each soul he's keeping track of, 0 means red soul, 1 means blue soul.
020D3E88,2 - menace's second form's bottom head hp
020D6348,2 - menace's second form's top head hp

020F1C82,2 - In the bestiary list, this is the enemy index the cursor has highlighted.

=== 020F6DEF: End of entities currently loaded into memory.

020F6DF4 - Affects the room transitions and the screen:
  02 - Normal.
  03 - The screen is black and soma can't be controlled (for loading screens between rooms). 
  04 - Selecting what warp to go.
  06 - Arriving at a warp room after warping.
020F6DF5 - 00 or 01. Affects the above variable.

020F6DF8,1 - Timer for how long to remain in the current mirror world state (see below).
020F6DF9,1 - Mirror world state.
  0 - Normal, not in the mirror world.
  1 - Starting to enter a mirror.
  2 - Finishing entering a mirror.
  3 - In the mirror world fully.
  4 - Starting to exit a mirror.
  5 - Finishing exiting a mirror.

020F6DFC-020F6DFF - Bitfield of global game flags.
  0x00000001 - Disables controls. Used during events and while warping.
  0x00000002 - Set during boss fights. Disables suspending, keeps boss doors shut, and turns mirrors into boss mirrors.
  0x00000004 - 
  0x00000008 - A magic seal is currently in progress (either an example automatic one or a manual one).
  0x00000020 - ? something related to input? or magic seals?
  0x00000040 - In player death state. The player won't actually die from this bit alone, but it does disable doors and make Yoko scream.
  0x00000080 - Hides the HUD.
  0x00000400 - Can't enter doors.
  0x00040000 - Seems to prevent the BGM from auto updating for one room transition.
    Set whenever an event is active, even if the player has control, such as during the prologue fight.
    Also set when the player is in a transition room, and by certain bosses when they play the boss music.
    This bit is automatically unset after one room transition.
  0x00100000 - Freezes Soma. He won't animate, take damage, be affected by gravity or momentum, or respond to player input. Used when loading the next room.
  0x02000000 - Set in rooms with mirrors. Can affect zombie somehow, sometimes making him invisible?
  0x04000000 - Set when playing the character swap animation in Julius mode.
  0x08000000 - Set when the game is paused.
  0x10000000 - Makes all enemy souls drops have a 100% chance. Used during the prologue.
  0x40000000 - Set when you haven't saved the game once yet. Disables suspending.

020F6E08,1 - Next available polygon ID to use. Increments from 0x16 to 0x3F then back to 0x16 as entities use these up.
020F6E09,1 - Current magic seal index being drawn.
020F6E0B,1 - Seems to be 1 when a magic seal was just drawn successfuly by the player, 0 otherwise?
  Bosses use this to know when they should start their death animation.
020F6E14 - this contains a ram pointer to the metadata for the room you're currently in.
020F6E18 - also contains a pointer to the current room metadata. but when you hit a door, this pointer updates a couple frames earlier than the above pointer. after 2 frames, the value here gets copied to the above location.
020F6E1C - pointer to the destination door you're heading to.
020F6E20,2 - Current room's X pos on the map.
020F6E22,2 - Current room's Y pos on the map.
  These are used when suspending to know what room the player is in.
020F6E25 - 0 if in dracula's castle. 1 if in abyss.
020F6E27 - ??? if this is 1, events end instantly, setting their event flag to true

=== 020F6E34 - 020F703B: First region that gets saved to the save file. 208 bytes long. Corresponds to 0000-0207 in the save file data.

020F6E34-020F6FA3 - List of which Castle map tiles you have explored.
020F6FA4-020F7006 - List of which Abyss map tiles you have explored.
  in the abyss each row of map tiles is 16 tiles wide. therefore each row takes up 2 bytes (16 bits) in this list.
  in other words, every screen soma zips up when corrupting memory subtracts 2 bytes from where memory is being corrupted.
  020F6FB0 - the byte for the last room of the abyss (the teleporter room).

020F7008,1 - Sector index to save to the save file.
020F7009,1 - Room index to save to the save file.
020F7018,4 - Player's x pos that should be stored in the save file.
020F701C,4 - Player's y pos that should be stored in the save file.
020F7020,4 - Player's z pos that should be stored in the save file.
  These are set to the player's position when he enters a room so suspend will work.
  When you save the game they're set to the center of the upperleftmost screen.
020F7024,4 - Bitfield of destroyable walls that have been destroyed on the map.
020F702C,4 - Bitfield of which map items you have. so the lowest bit makes the lost village be fully revealed with black map tiles, the second lowest bit makes demon guest house revealed with black map tiles, etc.
020F7038,2 - Bitfield of boss death flags.
  01 0x0002 Flying Armor
  02 0x0004 Balore
  03 0x0008 Dmitrii
  04 0x0010 Malphas
  05 0x0020 Dario
  06 0x0040 Puppet Master
  07 0x0080 Gergoth
  08 0x0100 Rahab
  09 0x0200 Zephyr
  0A 0x0400 Bat Company
  0B 0x0800 Aguni
  0C 0x1000 Paranoia
  0D 0x2000 Death
  0E 0x4000 Doppelganger (the event in the center of the castle)
  0F 0x8000 Abaddon

=== 020F703B: End of first region that gets saved to the save file. Corresponds to 0207 in the save file data.

020F703C,4 - Total play time.

020F7070,4 - Screen scrolling x pos.
020F7074,4 - Screen scrolling y pos.
020F707C,4 - Screen scrolling x pos for entity rendering purposes.
020F7080,4 - Screen scrolling y pos for entity rendering purposes.

020F7094,2 - Screen scrolling minimum x pos.
020F7096,2 - Screen scrolling minimum y pos.
020F7098,2 - Screen scrolling maximum x pos.
020F709A,2 - Screen scrolling maximum y pos.

020F70A4,2 - ?

020F70A6,1 - Destination room sector index.
020F70A7,1 - Destination room room index.

020F70BC - Current screen shake type.
  00,1: ?
  01,1: Counter for time remaining to keep shaking in frames.
  02,1: Number of pixels to shake by horizontally.
  03,1: Number of pixels to shake by vertically.

020F70C4 - Bitfield used by spinning spikes to track which unique IDs have already been used in this room.

020F70CC,4 - The current room's entity list pointer.

=== 020F70D0 - 020F732B: Second region that gets saved to the save file. 25C bytes long. Corresponds to 0208-0463 in the save file data.

020F70D0 - List of which souls you own and how many. (Owned skill info.)
  Each soul takes up a nibble (half a byte). So you can have up to 15 of each soul (though it only correctly displays up to 9).
020F7110 - An unused second list of which souls you own and how many? This number gets added to the first number.

020F7150-020F715F - Bitfield of which enemies have been killed at least once so they show up in the bestiary.

020F7160-020F716F - Bitfield of which enemy item1s you've learned.
020F7170-020F717F - Bitfield of which enemy item2s you've learned.
  These bits being set stops the item from showing up as question marks in the enemy info.

020F7180-020F7187 - Bitfield of miscellaneous flags.
  includes what area titles you've seen when entering the area.
  includes what breakable walls physically (not on the map)
  also whether you've seen save/warp room tutorial message.
  02 00000004 Drained the water in the Lost Village drawbridge room.
  03 00000008 Drawbridge is lowered.
  09 00000200 First floor broken in Gergoth's tower.
  0A 00000400 ?
  0B 00000800 Second floor broken in Gergoth's tower.
  0C 00001000 ?
  0D 00002000 Third floor broken in Gergoth's tower.
  0E 00004000 ?
  0F 00008000 Fourth floor broken in Gergoth's tower.
  10 00010000 ?
  11 00020000 Fifth floor broken in Gergoth's tower.
  12 00040000 ?
  13 00080000 Sixth floor broken in Gergoth's tower.
  14 00100000 ?
  15 00200000 Seventh floor broken in Gergoth's tower.
More misc flags (020F7184):
  3A 04000000 Seen the save room tutorial message.
  3B 08000000 Seen the warp room tutorial message.
020F7188-020F718B - Bitfield of event flags seen by the player.
  01 00000002 - Event 5D (prologue)
  02 00000004 - Event 5E
  03 00000008 - Event 5F
  04 00000010 - Event 60
  05 00000020 - Event 61
  06 00000040 - Event 62, Soma meeting Dario and Dmitrii in Wizardry Lab.
    This flag also controls whether Hammer's shop should have some more items in it yet or not.
  07 00000080 - Event 63
  08 00000100 - Event 64
  09 00000200 - Event 65, Arikado gives Mina's Talisman to Soma.
    This flag also controls whether Hammer's shop should have even more items in it yet or not.
  0A 00000400 - Event 66
  0B 00000800 - Event 67
  0C 00001000 - Event 68 (julius in silenced ruins defeated by dario)
  0D 00002000 - Event 69
  0E 00004000 - Event 69 bad end?
  0F 00008000 - Event 69 defeated Aguni?
  10 00010000 - Event 6A bad end?
  11 00020000 - Event 6A bad end?
  12 00040000 - 
  13 00080000 - Event 6B
  14 00100000 - Event 6C for entered menace fight?
  15 00200000 - Event 6D for halfway through menace fight?
  16 00400000 - Event 6E for killed menace?
  17 00800000 - 
  18 01000000 - 
  19 02000000 - Event 6F Flag for having cleared the game at least once?
  1A 04000000 - Event 70
  1B 08000000 - Event 71
  1C 10000000 - Event 72
  1D 20000000 - Event 73? except 73 doesn't have it set
  1E 40000000 - Event 74
  1F 80000000 - Event 75
020F7190-020F71A7 - Bitfield of pickup flags.
  Valid pickup flags range from 00 to BF.
  020F7190-020F719F (flags 00-7F) are definitely reserved for pickup flags.
  020F71A0-020F71A7 (flags 80-BF) are most likely for pickup flags as nothing else seems to read or write these bytes. However, the vanilla game didn't have any flags that went into these bytes, so it's not 100% verifiable if they're really for flags or not.
  Hardcoded flags:
    0A - Strongman puzzle first reward
    0E - Strongman puzzle second reward
    11 - Strongman puzzle third reward
020F71A8,4 - Bitfield of flags for what warp rooms you've visited.
  0001 - Lost Village, automatically unlocked.
  0002 - Demon Guest House.
  0004 - Wizardry Lab.
  0008 - Garden of Madness
  0010 - The Dark Chapel
  0020 - Condemned Tower
  0040 - Mine of Judgment
  0080 - Subterranean Hell
  0100 - Silenced Ruins
  0200 - Cursed Clock Tower
  0400 - The Pinnacle
  0800 - The Abyss
020F71AC,4 - ? Bitfield
020F71B0,4 - ? Bitfield
020F71B4,4 - Bitfield relating to the number of times you've visited Hammer's and Yoko's shops. TODO

020F71BC-020F7227 - List of which items you own and how many. (Owned item info.)
  Each item takes up a nibble (half a byte). So you can have up to 15 of each item (though it only correctly displays up to 9).

020F7228-020F7233 - The player's control config settings.
  Each setting is 2 bytes long.
  Specific control locations:
    020F7228,2 - Attack
    020F722A,2 - Super Attack
    020F722C,2 - Jump
    020F722E,2 - Change Equipment (Doppelganger)
    020F7230,2 - Guardian
    020F7232,2 - Ability (backdash/superjump)
  Each button:
    0001 - A
    0002 - B
    0004 - Select
    0008 - Start (doesn't actually work, it only opens the pause menu no matter what)
    0100 - R
    0200 - L
    0400 - X
    0800 - Y
  If you set more than one button bit for a single control, then either of the buttons you set will trigger that control.

020F7251,1 - 0 or 1 for whether the map screen or info screen are on the top screen.
020F7252,1 - ID of the enemy on the top screen enemy info panel.
020F7254,1 - Bitfield of what Magic Seals the player owns.
020F7255,1 - ???
020F7256,1 - Current game mode:
  0 - Soma mode.
  1 - Julius mode.
  2 - Boss rush.
  3 - Some kind of debug mode. No room entities get loaded in this mode.
  This variable affects various things, like whether you can press select to switch the top screen, how boss doors act, whether killing a boss triggers a magic seal, etc.
  4 - ?
  5 - ?
020F7257,1 - When this is 1 the Julius mode HUD is displayed on the bottom screen and pausing doesn't bring up a menu. (For Julius mode.) When higher than 1 the Julius HUD is not displayed, but pausing still doesn't bring up the menu.
020F7258,1 - Bitfield of which player characters you have unlocked in Julius mode.
  01 Soma (no effect)
  02 Julius
  04 Yoko
  08 Alucard
020F7259,1 - Difficulty.
  0 - Normal mode.
  1 - Hard mode
  Hard mode reduces the damage the player does to enemies to 0.6x.

=== 020F732B: End of second region that gets saved to the save file. Corresponds to 0463 in the save file data.

020F7348,4 - Normally 0, when 1 it prevents Soma from entering doors. This is used when Soma is using the cutall/axe super so he doesn't enter the door. Events set this to 0, which is what allows the seal warp glitch to work. can also be 3 for events?
020F7350,4 - Pointer to the player entity.
020F7354,4 - Another pointer to the player entity?

Player's current stats:
020F735C-6B - Player's natural stats (base stats + level up stats).
  020F735C,2 - Natural ATK
  020F735E,2 - Natural DEF
  020F7360,2 - Natural STR
  020F7362,2 - Natural CON
  020F7364,2 - Natural INT
  020F7366,2 - Natural LCK
  020F7368,4 - Unused. (Would be bitfield of natural resistances, but after being copied to 020F7388 it's overwritten by 0.)
020F736C-7B - Natural stats + item stats.
  020F736C,2 - Natural+item ATK
  020F736E,2 - Natural+item DEF
  020F7370,2 - Natural+item STR
  020F7372,2 - Natural+item CON
  020F7374,2 - Natural+item INT
  020F7376,2 - Natural+item LCK
  020F7378,4 - Bitfield of resistances from items.
020F737C-8B - Final stats.
  020F737C,2 - Final ATK
    Final ATK is calculated by taking the ATK from the current weapon and the final STR from 020F7380 and using this formula:
    (((ATK/4 + 1) * STR) / 0x18) + (STR+1)/4 + (ATK/4 + 2)
  020F737E,2 - Final DEF
    Final DEF is calculated by taking the natural+item DEF from 020F736E and the final CON from 020F7382 and using this formula:
    DEF + CON/2
  020F7380,2 - Final STR
  020F7382,2 - Final CON
  020F7384,2 - Final INT
  020F7386,2 - Final LCK
  020F7388,4 - Bitfield of resistances from items and souls.

020F73A4 - Bitfield of passive effects currently on the player.
  00000001 - Mothman.
  00000002 - Ghoul.
  00000004 - Skelerang.
  00000008 - Skeleton Ape.
  00000010 - Dead Warrior.
  00000020 - Dead Pirate.
  00000040 - Heart Eater.
  00000080 - Mimic.
  00000100 - Peeping Eye.
  00000200 - Skeleton Farmer.
  00000400 - Draghignazzo.
  00000800 - The Creature.
  00001000 - Treant.
  00002000 - Ouija Table.
  00004000 - Dead Crusader.
  00010000 - ?
  00020000 - Werewolf dashing.
  00040000 - Medusa Head floating.
  00080000 - ?
  00200000 - ?
  00400000 - Water acts as quicksand. This bit gets set every frame by object 05.

020F7408,1 - Number of enemies/entities on screen the previous frame?
020F7409,1 - Number of enemies/entities currently on screen?

=== 020F740C - 020F746B: Third region that gets saved to the save file. 60 bytes long. Corresponds to 0464-04C3 in the save file data.

020F740C,2 - Current level.
020F740E,2 - Current player character index.
  0 Soma.
  1 Julius.
  2 Yoko.
  3 Alucard.

020F7410,2 - Current HP.
020F7412,2 - Max HP.
020F7414,2 - Current MP.
020F7416,2 - Max MP.

020F7418,2 - Red soul you currently have equipped.
020F741A,2 - Blue soul you currently have equipped.
020F741C,2 - Yellow soul you currently have equipped.
020F741E,2 - Bitfield of what ability souls are currently enabled/equipped. (NOT which ones you currently own.)

020F7420,2 - Currently equipped weapon index (use only).
  Unlike 020F7436, this value affects what weapon soma actually swings and the stats you get.

020F742C - when you get an ability soul to gives you other bugged ability souls like doppelganger, this byte holds only the extra bugged souls you get (the one you're supposed to be getting isn't included here).

020F7436,2 - Currently equipped weapon index (name only).
  Unlike 020F7420, this value affects what the weapon name appears as in the equip menu.

020F7448,4 - Current experience.
020F744C,4 - Current gold.

020F7469 - Current subweapon (for Julius mode).

=== 020F746B: End of third region that gets saved to the save file. Corresponds to 04C3 in the save file data.

020F746C - List of collidable entities.
  Each entry is 8 bytes long.
  00,4: Type of collision.
    0 - A jump-through platform you can slide on.
    1 - A jump-through platform you can fall through.
    2 - A completely solid block.
  04,4: Pointer to the entity.

020F74F4 - List of cutscene enemies.
  Entry length 0xC.
  If Skeleton's var B is nonzero, it stores itself to the first entry in this list.
  00,4: Pointer to the entity.
  04,1: Set to 0 on initialization?

020F7528,2 - Text ID of the event currently playing.
  This is FFFF if no event is currently playing.

020F7596 - The maximum address that can be corrupted by the broken map code by getting out of bounds (aka memory corruption).
  Also remember bits can only be set on by memory corruption, never off.

020F759C,4 - ???

020F75A4,2 - Timer for how many more frames to display the name of the last soul you got in the upper right corner of the screen.
020F75A6,2 - Timer for how many more frames to display the name of the last item you got in the lower right corner of the screen.

020F75A8-020F7767 - Data for the current room's 4 layers. Each is 0x70 bytes long.
  00,4: Pointer to the layer's metadata.
  38,2: Width in pixels.
  3A,2: Height in pixels.
  5E,2: Palette index offset to use for this layer.

020F8018 - Current area name shown on the top screen (in warp rooms).

020F82B0,1 - What type of top screen is currently displayed.
  00 Normal map
  01 Info screen
  02 Name of area selected, for warp rooms
  03 Castle and moon used on the title screen
  04 Cross with inverted bat wings
  05 Enemy set mode map
  06 Boss rush map
  07 Credits top scren with all enemies appearing one by one
  08 Enemy set mode map
  09 White screen
  0A Black screen
020F82B1,1 - What the next type of top screen should be.
  This is what 020F82B0 will change into when the game finishes playing a fading out animation.
020F82B2 - ? top screen related

020F82C0-020F82CF - Bitfield related to palettes?
  There's a bit for each palette in the list of globally loaded palettes (020F8340).
  Maybe the bit being on means the palette slot is currently in use?
020F8300-020F830F - Duplicate of 020F82C0?

020F8340-020FC33F - Start of the list of all globally loaded palettes.
  0x200 palettes in total. Each is 0x20 bytes long (0x10 colors).
020FC340 - Duplicate of 020F8340...? Seems to be something related to hardware caching?

02100358-02100377 - Player's current outline palette?
  50,2 in player data is an index in this list. entry len 2.

0210A9E8,2 - ? maybe a boolean related to palettes?

0210AF18 - Start of list of hitboxes. Each entry 0x14 bytes long. The index in this list is located at offset +0xA7 within the entity's memory.
  The first 0xA bytes are the first hitbox, the second 0xA bytes are the second hitbox.
0210B24C - has stuff related to weapon hitboxes.
  0210B24E,0210B250 - left x pos, top y pos
  0210B252,0210B254 - right x pos, bottom y pos
  if a weapon has more than 1 hitbox, then the other ones will be listed right after this.

0210ECE0 - list of pointers to dynamic files loaded into ram?
  first pointer points to the start of asset memory.
  second pointer points to some struct that has +2C,4 pointing to the first asset entry in asset memory?

0210ED04 - Has a pointer to the start of asset memory, 0230BD20.

0210F014 - Player's current Y pos on the map?
0210F018 - Player's current X pos on the map?

0210F040 - List of pixel data for the currently drawn map.
  In one-dimensional graphics mode. So each pixel takes up a nibble, each 8x8 block takes up 0x20 bytes.
  You can calculate the offset of a tile here like this: 
    y_in_tiles/2*0x400 + x_in_tiles/2*0x20
  Note that y_in_tiles and x_in_tiles need to have the map draw offsets added to them already.

Stuff related to currently loaded tilesets:
02115064,4 - Which tile GFX asset index to load next.
02115068,4 - 
0211506C,4 - 
02115070,4 - 
02115074,4 - 
02115078-02115137 - List of tile GFX asset indexes currently loaded.
  Each is a word.
  FFFFFFFF indicates an unused slot.

02115384,4 - Currently playing song.
02115388,4 - 0 or 1? 1 is related to muting?
0211538C,4 - Previously playing song.

021528E4 - Inside the sound_data.sdat file, specifically the INFO section, this has a list of the SSEQ, SBNK (instruments), and volume for each song.

02195780 - Something related to playing songs, 0 for no songs, 1 for songs??

=== 0219E3E0 - 0223073F: Overlay 0

021FE0EC,4 - Hardcoded bitfield for what the unwanted states are for using a super attack.
  Same format as the unwanted states bitfield for souls.
  All super attacks share this one bitfield.
  Updating this allows the super attack to consume MP and show visual/audio effects, but does not allow the super attack to actually work correctly.
022123CC,4 - Second hardcoded bitfield for what the unwanted states are for using a super attack.
  Must update this field as well for the super attack to actually be used.

022003D0,1 - Hardcoded value for how much MP the Chaos Ring regenerates per frame.
  Default 1 per frame. This is on top of the usual MP regeneration and Rune Ring.

0222B8E0 - list of sprite pointers for area titles. the first one is shows the upper half of the gfx page. the second one shows the bottom half of the gfx page.
0222B8E8 - list of gfx files for area titles. each area in the list is 8 bytes long. the first number is a gfx page pointer, the second is either 0 or 1. the 0 or 1 is for which sprite pointer to use. 0 means the top half, 1 means the bottom half.

0222BAB8 - ??? list of pointers
0222BF74 - list of ??? pointers

0222BB18-0222BBCF - List of destructibles.
  Entry length 8.
  0x17 entries in total.
  00,01: Destructible graphic to use (index in list 0222BAAC).
  01,01: Sprite animation index to use.
  02,01: Sprite frame index to use when destroyed.
  03,01: Behavior type.
    00 - Candle or other normal object that spawns a single money drop when destroyed.
    01 - Chest that spawns a lot of money when destroyed.
      If you're not in Soma mode, it spawns a large heart instead.
    02 - Soul vessel.
  04,04: Bitfield.
    00000001 - If set, the destructible is horizontally flipped.
    00000002 - If clear, the destructible has a circular glowing aura around it (for lights).
0222BAAC-0222BB0B - List of destructible graphics.
  Entry length 0xC.
  00,04: GFX pointer.
  04,04: Sprite pointer.
  08,04: Palette list pointer.

0222C614-0222C623 - List of text IDs for the event that should play when each character confronts Somacula.
  4 entries, one for each character. The index in this list is the current player index.
  The first entry in this list is for Soma, though it's just set to 0, which is not an event so it doesn't work right.

0222C714 - List of pointers to special object create codes.
0222C8F0 - List of pointers to special object update codes.

0222E9B0 - List of soul ID offsets for each color of soul. Entry length 4.
  00 - Offset 00
  01 - Offset 35
  02 - Offset 59
  03 - Offset 74

0222BCEC - List of chairs.
  Entry length 3.
  Var A of the chair is the index in this list.
  00,1: Chair's sprite index. This is the index in list 0222BD04.
  01,1: Frame index.
  02,1: Destroyed frame index.
    Used to create the flying particles after this chair is destroyed.

0222BD04-0222BD33 - List of chair sprite info.
  Entry length 0xC.
  00,4: GFX asset pointer.
  04,4: Sprite pointer.
  08,4: Palette pointer.

Abyss tele destination data for taking you to the Abyss:
0222BE04,1 - Sector index
0222BE05,1 - Room index
0222BE06,2 - Sprite frame index for this teleporter to use.
0222BE08,2 - X pos
0222BE0A,2 - Y pos

Abyss tele destination data for taking you out of the Abyss:
0222BE0C,1 - Sector index
0222BE0D,1 - Room index
0222BE0E,2 - Sprite frame index for this teleporter to use.
0222BE10,2 - X pos
0222BE12,2 - Y pos

Abyss tele destination data for Soma mode final boss:
0222BE14,1 - Sector index
0222BE15,1 - Room index
0222BE16,2 - Sprite frame index for this teleporter to use.
0222BE18,2 - X pos
0222BE1A,2 - Y pos

Abyss tele destination data for Julius mode final boss:
0222BE1C,1 - Sector index
0222BE1D,1 - Room index
0222BE1E,2 - Sprite frame index for this teleporter to use.
0222BE20,2 - X pos
0222BE22,2 - Y pos

0222C478-0222C4CB - List of warp rooms.
  Entry length 7.
  00,1: Sector index of the warp room.
  01,1: Room index of the warp room.
  02,1: X pos of the warp room on the map in pixels.
  03,1: Y pos of the warp room on the map in pixels.
  04,1: X index of this warp room compared to other warp rooms.
    Used for deciding what warp room to select when pressing left/right on the dpad. Left selects the warp room with 1 less X index, right selects the warp room with 1 more X index.
  05,1: Y index of this warp room compared to other warp rooms.
    Used for deciding what warp room to select when pressing up/down on the dpad. Up selects the warp room with 1 less Y index, down selects the warp room with 1 more Y index.
  06,1: Area name index to show on the top screen.
  See also list 0209A188, which has the list of x/y positions for the square icons on each warp room.

0222C644 - List of enemies that need a certain enemy overlay and which overlay they need.
  00,4: Enemy ID.
  04,4: Overlay ID.

0222CBE0 - List of event actors. Each is 16 bytes long.
  00,4: Sprite file pointer.
  04,4: GFX pointer.
  08,4: Palette pointer.
  0C,4: ID of the special object corresponding to this event actor.
Here's what each actor is (index, special object id, description):
  00 4F Mina
  01 51 Arikado
  02 3C Yoko (missing many gfx pages)
  03 50 Hammer
  04 52 Julius NPC
  05 53 Celia
  06 54 Dario
  07 55 Dmitrii
  08 5B Alucard (missing gfx pages)
  09 52 Julius NPC (missing gfx page)

0222DED4-0222DEEB - List of subweapon info for Julius mode character.
  Entry length 8. The index in the list is 0 for Julius, 1 for Yoko, 2 for Alucard.
  00,2: Number of subweapons this character has.
  02,2: Frame index in the common sprite of the icon for the first subweapon.
    The other subweapon icons for this character should come directly after this one in the common sprite.
  04,4: Pointer to list of subweapons.
    The list is composed of halfwords, each halfword is a soul index.

0222DF68-0222DFA7 - List of character swap voices.
  Entry length 0x10.
  The index in this list is the character you're swapping from.
  00,4: Voice for this character to play when swapping to Soma (unused).
  04,4: Voice for this character to play when swapping to Julius.
  08,4: Voice for this character to play when swapping to Yoko.
  0C,4: Voice for this character to play when swapping to Alucard.

0222DFEC-0222E1FB - List of which sprite animations are for which player states for each player character (state anims).
  The pointer at offset C in player data points to the appropiate entry in this list.
  Specific pointers for each player:
    0222DFEC-0222E06F: Soma
    0222E070-0222E0F3: Alucard
    0222E0F4-0222E177: Julius
    0222E178-0222E1FB: Yoko
  Each list is 0x84 bytes long. Each state takes up 2 bytes for 0x42 states in total.
  Each entry is the sprite animation index for that state index.

0222E9D4 - List of skill gfx.
  Entry length 0x10.
  00,4: Pointer to GFX filename string
  04,4: GFX pointer
  08,4: Sprite pointer
  0C,4: Palette pointer

0222ED5C - List of something weapon swing anims. TODO
  Entry length 6.
  01,1:
  02,2: 
  04,2:
  0201439C - func that gets called with this data in it.
    r0 - ?
    r1 - 02,2
    r2 - 04,2
    r3 - 01,1

0222EDAC - List of super attacks.
  Entry length 8. 0xF entries in total.
  00,4: The update code for the super attack.
  04,4: MP cost of the super attack.

0222DFA8-0222DFE8 - List of which player sprite animation corresponds to a type of weapon swing animation.
  Entry length 5.
  The index in this list is the weapon's Swing Anim.
  00,1: Swing animation index while standing.
  01,1: Swing animation index while crouching.
  02,1: Swing animation index while in air.
  03,1: Stop-swinging animation index while standing.
  04,1: Stop-swinging animation index while crouching.

0222E5EC-0222E5FB - List of starting/base stats for the player.
  These are shared by all player characters.
  0222E5EC,2 - Unused (would be ATK, but gets overwritten after being copied.)
  0222E5EE,2 - DEF
  0222E5F0,2 - STR
  0222E5F2,2 - CON
  0222E5F4,2 - INT
  0222E5F6,2 - LCK
  0222E5F8,4 - Unused (would be resistances, but gets overwritten after being copied.)

0222E734-0222E73D - List of soul scaling types.
  Entry length 2.
  5 total entries.
  00,1: Total scaling levels this type has. (1, 2, 3, 5, 9)
  01,1: Divisor to divide the player's number of this soul by to get the scaling level.

0222EE24 - List of weapon gfx.
  Entry length 0xC.
  00,4: GFX pointer
  04,4: Sprite pointer
  08,4: Palette pointer

0222F1DC-0222F1EF - List of pointers to magic seal data.
  e.g. 0222F270
  Format of each magic seal data:
  00,2: Number of points on the circumference circle.
  02,2: Radius of the circle in pixels.
    Signed. Negative values invert the circle vertically.
  04,2: Visual rotation of the points along the circle.
    Every 0x4000 is equivalent to 90 degrees.
  06,2: Number of midpoints along each line the player needs to touch for the line to count as successfully drawn.
    For example, if this is 20, the player needs to hit at least 20 midpoints along the line, so each line will take at least 20 frames to draw. If this is 1, the player can just jump straight from one point to the next, so each line only requires 1 frame to draw. The higher the number of midpoints the smoother and slower the player must draw the line for it to count.
    This is 4 for all five seals in the vanilla game.
  08,4: Speed the seal autocompletes itself at after the player manually completes it.
  0C,4: Pointer to a list of point indexes in the order the seal should be drawn.
    Each point index is a single byte. FF indicates the end of the list.
  10,4: Sprite pointer for the finished seal image.
  14,4: GFX asset pointer for the finished seal image.
  18,4: Palette list pointer for the finished seal image.
  1C,2: Time limit of the seal in frames.
  1E,2: Finished seal image index.
    TODO: why is this necessary when the gfx asset ptr is there already?

0222F290-0222F2D7 - List of which magic seal is needed for each boss (and its corresponding boss doors).
  The boss index is the index in this list (same order as boss death flags).
  Each entry is 4 bytes long. It's simply the magic seal index for this boss.

=== 0223073F: End of Overlay 0

02230744,4 - Has a pointer to the Condemned Towers breakable floors object (special object type 18) in the current room, or 0 for none.
  This is what Gergoth uses to tell the floor to start breaking.

02298D9C

022B9F48-022C675F - palette data.

022C65D4 - palette for f_farik0.dat portrait.

022CC950 and 022C3344 - GFX and palette for the background of the map screen.

022D7E40 and 022DA30C - GFX and palette for the background of the info screen.
  These include the elemental symbols, among other things.

0222BD90-0222BDA7 - List of red soul wall blockade data.
  Entry length 6.
  The red wall's var A is the index in this list.
  00,2: Sprite frame index to use.
  02,2: Miscellaneous flag index
  04,2: The soul index of the soul that opens this wall.

0222BDE0-0222BDF7 - List of rewards from the strongman game.
  Entry length 8.
  00,4: Pickup flag index for having spawned this reward. (Not for actually picking it up - so if you leave the room without getting it, you can't get it again.)
  04,4: Global ID+1 of the item.
0222BE34-0222BE57 - List of easter egg items.
  Entry length 0xC.
  00,2: Item global ID+1.
    The icon of the easter egg item is hardcoded - changing this item ID won't change the icon. Easter egg items also don't display the item name on screen.
  02,2: X pos.
  04,2: Y pos.
  06,2: Unused. 0.
  08,4: Code pointer.

=== 022D7900: Overlay 40

022FFB4C,1 - Hardcoded default red soul index for Dmitrii to start the fight with.

=== 022E881F: End of Overlay 40

02308920 - Start of asset memory.

02348C00 - when drawing your name, the pixel data is here. changing this doesn't change what's on screen, but does affect whether you can press the OK button or not. also, if you start a new game and then save, it will actually be the displayed signature.

023FFDA0,4 - Has a pointer to 02308920, the start of asset memory
023FFDC4,4 - Has a pointer to 023C0000, the end of asset memory.

Asset memory format:
??

Asset entry format:
00,2: ??
  known values: 5544, 4652
02,2: Bitfield?
04,4: Length of the asset data in bytes.
08,4: Pointer to the previous asset entry in memory.
0C,4: Pointer to the next asset entry in memory.
10,(varies): The asset data.

=== 02A00000 - 02A063BF: Rest of ARM9 (except missing 0x98 bytes at the end)

/sc/f_maf00.dat - 00 to 05 have gfx for magic seals (the big graphics that appear on screen when you're drawing them)
