PoR Enemy DNA:
  0x20 bytes long.
  00,4: Enemy create code.
  04,4: Enemy update code.
  08,2: Item 1. Global ID of the item + 1. Can be a skill.
  0A,2: Item 2
  0C,1: Palette offset to use when this enemy is petrified.
  0D,1: SP.
  0E,2: Max HP.
  10,2: EXP.
  12,1: ???
  13,1: Attack stat.
  14,1: Defense stat.
  15,1: Magical defense stat.
  16,1: Base chance to drop item 1.
    This is on a scale from 0 to 0x100 (decimal 256), so 0x40 is a 25% chance, 0x80 is a 50% chance, etc.
    Note that drop chance caps out at 50%, after the bonus from luck.
  17,1: Base chance to drop item 2.
    Same as above.
  18,4: Weaknesses
    In PoR, weaknesses increase damage the enemy takes if the enemy is weak to any of the elements of the attack.
    If at least one of those elements is magical (Fire/Ice/Lightning/Dark/Holy), the multiplier is 2x damage.
    Otherwise, if it's just physical or status effect weaknesses (Strike/Stab/Slash/Poison/Curse/Stone), the multiplier is 1.25x.
  1C,4: Resistances
    In PoR, resistances halve damage the enemy takes if the enemy resists any of the elements of the attack. (Only counting the base 8 elements, resisting Poison/Curse/Stone doesn't doing anything.)
    Bit 32: This bit is special, it tells the function InitializeRoomEnemyOrSpecialObject to skip loading this enemy's GFX assets.
      This is used only for a few enemies that have tons of GFX pages and stay dead permanently (mostly bosses) so that the game doesn't need to waste time loading all those GFX assets when the enemy is already dead.
      This bit should only be used for enemies that are specially coded to manually load their own GFX instead of leaving it up to the engine. If you set this bit for an enemy that does not load its own GFX the enemy will be invisible or have corrupted graphics because the GFX were never loaded.
